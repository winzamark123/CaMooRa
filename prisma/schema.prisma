// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  clerkId String @id @unique

  profile Profile?
  contact Contact?
  Images  Images[]
}

model Profile {
  user    User   @relation(fields: [clerkId], references: [clerkId], onDelete: Cascade)
  clerkId String @unique

  firstName    String // init with firstName from Clerk
  lastName     String // init with lastName from Clerk
  profilePic   Images? @relation(fields: [profilePicId], references: [id])
  profilePicId String
  bio          String?
}

model Contact {
  user    User   @relation(fields: [clerkId], references: [clerkId], onDelete: Cascade)
  clerkId String @unique

  email     String  @unique // init with primaryEmailAddressId from Clerk
  discord   String?
  instagram String?
  phone     String?
  whatsApp  String?

  isContactPublic Boolean @default(false)
  isPhotographer  Boolean @default(false)
}

model Images {
  id        String    @id @default(cuid())
  user      User      @relation(fields: [clerkId], references: [clerkId], onDelete: Cascade)
  clerkId   String
  url       String
  createdAt DateTime  @default(now())
  key       String
  Profile   Profile[]
}
